{"version":3,"sources":["beep.js","Timer.js","TimerSet.js","App.js","serviceWorker.js","index.js"],"names":["window","AudioContext","webkitAudioContext","audiocontext","fgain","createGain","connect","destination","options","console","warn","state","interval","duration","beep","times","loop","i","currentTime","osc","createOscillator","gain","setValueAtTime","value","exponentialRampToValueAtTime","start","stop","onended","disconnect","play","setTimeout","destroy","context","close","TimerDiv","styled","div","shortbeep","Beep","Timer","props","propstime","time","onEnd","useState","setTime","originalTime","setOriginalTime","animate","useCallback","newTime","Date","Math","ceil","useEffect","handle","requestAnimationFrame","cancelAnimationFrame","noSleep","NoSleep","TimerSetDiv","TimerSet","setStart","timeset","setTimeset","running","setRunning","timesetquery","URLSearchParams","useLocation","search","get","timesetstr","sections","split","section","repeat","labels","map","x","parseInt","log","length","atimeset","label","push","parseTimeset","progress","slice","reduce","a","b","nexttime","nextlabel","buttonicon","key","onClick","className","LinearProgress","variant","color","Fab","aria-label","resume","alert","enable","document","body","appendChild","noSleepVideo","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a09a379.chunk.js","sourcesContent":["var INTERVAL = 250\nvar RAMP_DURATION = 1\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext\nwindow.audiocontext = window.audiocontext || new window.AudioContext()\nlet audiocontext = window.audiocontext;\nvar fgain = audiocontext.createGain()\nfgain.connect(audiocontext.destination)\n\nexport default function (options) {\n\n  if (!options) options = {}\n  console.warn('AUDIO', audiocontext.state);\n  var interval = options.interval || INTERVAL\n  var duration = options.duration || RAMP_DURATION;\n\n  var play = function () {\n    console.warn('AUDIO play', audiocontext.state);\n    var currentTime = audiocontext.currentTime\n    var osc = audiocontext.createOscillator()\n    var gain = audiocontext.createGain()\n    osc.connect(gain)\n    gain.connect(fgain);\n\n    gain.gain.setValueAtTime(gain.gain.value, audiocontext.currentTime);\n    gain.gain.exponentialRampToValueAtTime(0.001, audiocontext.currentTime + duration);\n\n    osc.start(0);\n    osc.stop(currentTime + duration);\n\n    \n    osc.onended = function () {\n      gain.disconnect(fgain);\n      osc.disconnect(gain);\n    }\n  }\n\n  var beep = function (times) {\n    if (!times) times = 1\n\n    ;(function loop (i) {\n      play()\n      if (++i < times) setTimeout(loop, interval, i)\n    })(0)\n  }\n\n  beep.destroy = function () {\n    if (!options.context) audiocontext.close()\n  }\n\n  return beep\n}\n","import React,{useEffect, useState, useCallback} from 'react';\nimport Beep from './beep.js';\n\nimport styled from 'styled-components';\n\nconst TimerDiv = styled.div`\n   display:flex;\n   align-items: flex-end;\n   justify-content:center;\n   flex:1;\n   font-size:10em;\n   letter-spacing:1px;\n    max-height: 180px;\n    align-items: center;\n`;\n\nconst shortbeep = Beep({duration:0.2});\n\nconst Timer = (props) => {\n  const {time:propstime, start, onEnd} = props;\n  const [time,setTime] = useState(propstime);\n  const [originalTime,setOriginalTime] = useState(propstime);\n\n  const animate = useCallback(()=>{\n    if (start) {\n      let newTime = originalTime - ((new Date() - start)/1000);\n      if (newTime <= 0.2) {\n\tnewTime = 0;\n\tsetTime(0);\n\tconsole.warn('ending!');\n\tonEnd();\n      }\n      else {\n\tif (Math.ceil(time) > Math.ceil(newTime)) {\n\t  if (newTime <= 3) {\n\t    shortbeep(1);\n\t  }\n\t  if (newTime <= 1) {\n\t    shortbeep(2);\n\t  }\n\t}\n\tsetTime(newTime);\n      }\n    }\n  }, [start, onEnd, time, originalTime]);\n\n  useEffect(()=>{\n    \n    const handle = requestAnimationFrame(animate);\n    return ()=>{\n      cancelAnimationFrame(handle);\n    };\n  },[time, animate]);\n\n  useEffect(()=> {\n    if (start) {\n      //console.warn('Timer starts! use effect timer start', start, time);\n      const handle = requestAnimationFrame(animate);\n      return ()=>{\n\tcancelAnimationFrame(handle);\n      };\n    }\n    else {\n      //console.log('setting original time');\n      setOriginalTime(time);\n    }\n  }, [start, animate, time]);\n\n  useEffect(()=> {\n    //console.log('props.time changed, setting', propstime);\n    setOriginalTime(propstime);\n  },[propstime]);\n\n\n  return (\n    <TimerDiv>\n      {time !== -1 ? Math.ceil(time) : 'fin'}\n    </TimerDiv>\n  );\n}\n\nexport default Timer;\n","import React,{useEffect, useState} from 'react';\nimport Timer from './Timer.js';\nimport styled from 'styled-components';\nimport Beep from './beep.js';\n\nimport Fab from '@material-ui/core/Fab';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport {\n  useLocation\n} from \"react-router-dom\";\nimport NoSleep from 'nosleep.js';\nvar noSleep = new NoSleep();\n\nconst shortbeep = Beep({duration:0.2, interval:150});\n\nconst TimerSetDiv = styled.div`\n  flex:1;\n  display:flex;\n  flex-direction:column;\n  justify-content:center;\n  align-items:center;\n\n  background:black;\n\n  padding:20px;\n\n  buttondiv {\n    position:relative;\n    display:flex;\n    flex:1;\n    max-height:50px;\n  }\n  button {\n   text-transform:uppercase;\n   flex:1;\n  }\n\n  counter {\n    display: flex;\n    flex-direction:column;\n    flex:1;\n    font-size:20px;\n    max-height: 40px;\n    align-items: center;\n  }\n\n  .progress {\n    padding-top:15px;\n    width:100px;\n    .MuiLinearProgress-root {\n     height:8px;\n    }\n \n  } \n\n  label {\n   text-transform:capitalize;\n   max-height:50px;\n   font-size:30px;\n   flex:1;\n   align-items:flex-start;\n  }\n\n  sublabel {\n   display:flex;\n   cursor:pointer;\n   max-height:40px;\n   font-size:16px;\n   color:grey;\n   flex:1;\n   align-items:center;\n  }\n\n`;\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\n\nconst TimerSet = (props) => {\n  const [start,setStart] = useState(null);\n  const [timeset,setTimeset] = useState(null);\n  const [running, setRunning] = useState(0);\n\n  let query = useQuery();\n  let timesetquery = query.get('set'); \n  if (!timesetquery) {\n    timesetquery = `1,Get ready,5|9,Work/Rest,30/10`;\n  }\n\n\n  const parseTimeset = (timesetstr)=> {\n    const timeset = [];\n    const sections = timesetstr.split('|');\n    for (let section of sections) {\n      let [repeat,labels,times] = section.split(',');\n      times = times.split('/').map(x=>parseInt(x));\n      labels = labels.split('/');\n      console.log('parts', repeat, labels, times, section);\n      for (let i = 0; i < repeat*labels.length; i++) {\n\tlet atimeset = {label: labels[i % labels.length], time: times[i % times.length]};\n\ttimeset.push(atimeset);\n      }\n    }\n    console.log('parsed', timeset);\n    return timeset;\n  };\n\n  useEffect(()=>{\n    const timeset = parseTimeset(timesetquery);\n    setTimeset(timeset);\n  },[timesetquery]);\n  \n  useEffect(()=>{\n    console.warn('start changed! start from timerset', start);\n  },[start]);\n\n  if (!timesetquery) {\n    return null;\n  }\n\n  if (!timeset || !timeset[running]) {\n    return null;\n  }\n  \n  const progress = timeset.slice(0,running+1).reduce((a,b)=>(a + b.time), 0) / timeset.reduce((a,b)=>(a + b.time), 0) * 100;\n  \n  console.log('progress', progress);\n  \n  const {time,label} = timeset[running];\n  const {time:nexttime,label:nextlabel} = timeset[running+1] || {};\n  \n  console.log('label', label, time, running, timeset);\n\n  const buttonicon = start ? <PauseIcon /> : <PlayArrowIcon />;\n  \n  return (\n    <TimerSetDiv>\n      <label>{label}</label>\n      <Timer key={running} {...{time, label, running}}\n\t     onEnd={()=> {\n\t       console.warn('on end on timerset!');\n\t       setStart(null); // because we set 2 states here, prevent 2 starts\n\t       if (timeset[running+1]) {\n\t\t setRunning(running=>running+1);\n\t\t setStart(new Date());\n\t       }\n\t       else {\n\t\t shortbeep(3);\n\t       }\n\t}}\n\tstart={start} />\n\t<sublabel onClick={()=>{\n\t    setStart(null); // because we set 2 states here, prevent 2 starts\n\t    if (timeset[running+1]) {\n\t      setRunning(running=>running+1);\n\t    }\n\t  }}>{nextlabel ? `Next: ${nextlabel} / ${nexttime}` : ``}</sublabel>\n\t<counter>\n\t  <div className=\"progress\"><LinearProgress variant=\"determinate\" value={progress} color=\"secondary\" /></div>\n\t</counter>\n\t<buttondiv>\n\t  <Fab color=\"secondary\" aria-label=\"run\"\n\t       onClick={()=> {\n\t\t if (window.audiocontext.state === 'suspended') {\n\t\t   window.audiocontext.resume();\n\t\t }\n\t\t start ? setStart(null) : setStart(new Date())\n                 alert('start no sleep');\n                 noSleep.enable();\n            \t document.body.appendChild(noSleep.noSleepVideo)\n\t    }}>\n\t    {buttonicon}\n\t  </Fab>\n\t</buttondiv>\n    </TimerSetDiv>\n  );\n}\n\nexport default TimerSet;\n","import React from 'react';\nimport './App.css';\nimport TimerSet from './TimerSet.js';\n\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\n\nfunction App() {  \n  return (\n    <Router>\n      <div className=\"App\">\n\t<TimerSet />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}